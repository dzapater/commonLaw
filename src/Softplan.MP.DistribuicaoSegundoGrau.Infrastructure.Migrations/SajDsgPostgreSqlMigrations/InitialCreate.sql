CREATE SCHEMA IF NOT EXISTS sajdsg;
CREATE TABLE IF NOT EXISTS sajdsg."__MigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___MigrationsHistory" PRIMARY KEY ("MigrationId")
);


DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE SCHEMA IF NOT EXISTS sajdsg;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.analise_processo (
        processo_id character varying(200) NOT NULL,
        vaga_id integer NULL,
        motivo character varying(2000) NULL,
        metadata_uuid uuid NULL,
        metadata_row_version bytea NULL,
        metadata_data_inclusao timestamp with time zone NULL,
        metadata_data_atualizacao timestamp with time zone NULL,
        metadata_usuario_inclusao character varying(2000) NULL,
        metadata_usuario_atualizacao character varying(2000) NULL,
        tipo_distribuicao integer NOT NULL,
        area_atuacao_id bigint NULL,
        CONSTRAINT pk_id_anal_proc PRIMARY KEY (processo_id)
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.distribuicao_processo (
        distribuicao_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        metadata_uuid uuid NULL,
        metadata_row_version bytea NULL,
        metadata_data_inclusao timestamp with time zone NULL,
        metadata_data_atualizacao timestamp with time zone NULL,
        metadata_usuario_inclusao character varying(2000) NULL,
        metadata_usuario_atualizacao character varying(2000) NULL,
        processo_id character varying(200) NULL,
        vaga_id integer NULL,
        motivo character varying(2000) NULL,
        tipodistribuicao integer NOT NULL,
        CONSTRAINT pk_id_dist_proc PRIMARY KEY (distribuicao_id)
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.excecao_vaga (
        id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        metadata_uuid uuid NULL,
        metadata_row_version bytea NULL,
        metadata_data_inclusao timestamp with time zone NULL,
        metadata_data_atualizacao timestamp with time zone NULL,
        metadata_usuario_inclusao character varying(2000) NULL,
        metadata_usuario_atualizacao character varying(2000) NULL,
        vaga_id integer NOT NULL,
        classe_id integer NULL,
        assunto_id integer NULL,
        especialidade_id integer NULL,
        origem_id integer NULL,
        unidade_id integer NULL,
        orgao_julgador_id integer NULL,
        motivo character varying(2000) NULL,
        CONSTRAINT pk_id_exc_vaga PRIMARY KEY (id)
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.impedimento_distribuicao_log (
        log_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        processo_id character varying(200) NOT NULL,
        transaction_id uuid NOT NULL,
        tipo_distribuicao integer NOT NULL,
        payload_type character varying(200) NULL,
        payload_srlztion_type integer NOT NULL,
        payload bytea NULL,
        metadata_uuid uuid NULL,
        metadata_row_version bytea NULL,
        metadata_data_inclusao timestamp with time zone NULL,
        metadata_data_atualizacao timestamp with time zone NULL,
        metadata_usuario_inclusao character varying(2000) NULL,
        metadata_usuario_atualizacao character varying(2000) NULL,
        CONSTRAINT pk_id_imp_dist_log PRIMARY KEY (log_id)
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.jobs (
        id text NOT NULL,
        descricao character varying(200) NULL,
        row_version bytea NULL,
        payload character varying(200) NULL,
        CONSTRAINT pk_id_jobs PRIMARY KEY (id)
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.regra_distribuicao (
        id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        metadata_uuid uuid NULL,
        metadata_row_version bytea NULL,
        metadata_data_inclusao timestamp with time zone NULL,
        metadata_data_atualizacao timestamp with time zone NULL,
        metadata_usuario_inclusao character varying(2000) NULL,
        metadata_usuario_atualizacao character varying(2000) NULL,
        tipo_processo integer NULL,
        area integer NULL,
        variavel_equilibrio integer NOT NULL,
        escopo_equilibrio integer NOT NULL,
        descricao character varying(120) NULL,
        ativo boolean NOT NULL,
        cdlocal integer NOT NULL,
        CONSTRAINT pk_id_regra_dist PRIMARY KEY (id)
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.vaga (
        id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        orgao_id integer NULL,
        tipo_orgao_id integer NULL,
        metadata_row_version bytea NULL,
        instalacao_id integer NOT NULL,
        procurador_titular_id character varying(120) NULL,
        descricao character varying(120) NULL,
        area integer NOT NULL,
        ativa boolean NOT NULL,
        reu_preso boolean NOT NULL,
        distribuicao_mesma_vaga boolean NOT NULL,
        configuracoes_prevencao boolean NOT NULL,
        distribuicoes integer NOT NULL,
        compensacao integer NOT NULL,
        motivo character varying(2000) NULL,
        distribuicao_por_volume integer NOT NULL,
        compensacao_por_volume integer NOT NULL,
        cdlocal integer NOT NULL,
        metadata_uuid uuid NULL,
        metadata_data_inclusao timestamp with time zone NULL,
        metadata_data_atualizacao timestamp with time zone NULL,
        metadata_usuario_inclusao character varying(2000) NULL,
        metadata_usuario_atualizacao character varying(2000) NULL,
        CONSTRAINT pk_vaga PRIMARY KEY (id)
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.distribuicao_processo_log (
        log_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        processo_id character varying(200) NOT NULL,
        transaction_id uuid NOT NULL,
        payload_type character varying(200) NULL,
        distribuicao_id bigint NOT NULL,
        payload_serialization_type integer NOT NULL,
        payload bytea NULL,
        CONSTRAINT pk_id_dist_proc_log PRIMARY KEY (log_id),
        CONSTRAINT fk_id_logs_dist FOREIGN KEY (distribuicao_id) REFERENCES sajdsg.distribuicao_processo (distribuicao_id) ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.regra_distribuicao_assunto (
        regra_distribuicao_id integer NOT NULL,
        assunto_id bigint NOT NULL,
        descricao character varying(120) NULL,
        CONSTRAINT pk_id_regra_dist_asto PRIMARY KEY (regra_distribuicao_id, assunto_id),
        CONSTRAINT fk_id_regra_dist_assunto FOREIGN KEY (regra_distribuicao_id) REFERENCES sajdsg.regra_distribuicao (id) ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.regra_distribuicao_classe (
        regra_distribuicao_id integer NOT NULL,
        classe_id bigint NOT NULL,
        descricao character varying(120) NULL,
        CONSTRAINT pk_id_regra_dist_clas PRIMARY KEY (regra_distribuicao_id, classe_id),
        CONSTRAINT fk_id_regra_dist_classe FOREIGN KEY (regra_distribuicao_id) REFERENCES sajdsg.regra_distribuicao (id) ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.regra_distribuicao_espec (
        regra_distribuicao_id integer NOT NULL,
        especialidade_id bigint NOT NULL,
        descricao character varying(120) NULL,
        CONSTRAINT pk_id_regra_dist_espec PRIMARY KEY (regra_distribuicao_id, especialidade_id),
        CONSTRAINT fk_id_regra_dist_espec FOREIGN KEY (regra_distribuicao_id) REFERENCES sajdsg.regra_distribuicao (id) ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.regra_distribuicao_orgao (
        regra_distribuicao_id integer NOT NULL,
        orgao_julgador_id bigint NOT NULL,
        origem_id integer NOT NULL,
        unidade_id bigint NOT NULL,
        descricao character varying(120) NULL,
        CONSTRAINT pk_id_regra_dist_org PRIMARY KEY (regra_distribuicao_id, orgao_julgador_id),
        CONSTRAINT fk_id_regra_dist_org_jul FOREIGN KEY (regra_distribuicao_id) REFERENCES sajdsg.regra_distribuicao (id) ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.regra_distribuicao_tarja (
        regra_distribuicao_id integer NOT NULL,
        tarja_id bigint NOT NULL,
        descricao character varying(120) NULL,
        CONSTRAINT pk_id_regra_dist_tarja PRIMARY KEY (regra_distribuicao_id, tarja_id),
        CONSTRAINT fk_id_regra_dist_tarja FOREIGN KEY (regra_distribuicao_id) REFERENCES sajdsg.regra_distribuicao (id) ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.regra_distribuicao_unidade (
        regra_distribuicao_id integer NOT NULL,
        unidade_id bigint NOT NULL,
        origem_id integer NOT NULL,
        descricao character varying(120) NULL,
        CONSTRAINT pk_id_regra_dist_unid PRIMARY KEY (regra_distribuicao_id, unidade_id),
        CONSTRAINT fk_id_regra_dist_unidade FOREIGN KEY (regra_distribuicao_id) REFERENCES sajdsg.regra_distribuicao (id) ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.compensacao_log (
        log_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        vaga_id integer NOT NULL,
        motivo character varying(2000) NULL,
        metadata_uuid uuid NULL,
        metadata_row_version bytea NULL,
        metadata_data_inclusao timestamp with time zone NULL,
        metadata_data_atualizacao timestamp with time zone NULL,
        metadata_usuario_inclusao character varying(2000) NULL,
        metadata_usuario_atualizacao character varying(2000) NULL,
        valor integer NOT NULL,
        CONSTRAINT pk_id_comp_log PRIMARY KEY (log_id),
        CONSTRAINT fk_id_vaga_comp_log FOREIGN KEY (vaga_id) REFERENCES sajdsg.vaga (id) ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.impedimento_processo (
        processo_id character varying(200) NOT NULL,
        impedimento_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        vaga_id integer NOT NULL,
        motivo character varying(2000) NULL,
        metadata_uuid uuid NULL,
        metadata_row_version bytea NULL,
        metadata_data_inclusao timestamp with time zone NULL,
        metadata_data_atualizacao timestamp with time zone NULL,
        metadata_usuario_inclusao character varying(2000) NULL,
        metadata_usuario_atualizacao character varying(2000) NULL,
        CONSTRAINT pk_id_imp_proc PRIMARY KEY (processo_id, impedimento_id),
        CONSTRAINT fk_id_vaga_imp FOREIGN KEY (vaga_id) REFERENCES sajdsg.vaga (id) ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.membro_vaga (
        id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        id_vaga integer NOT NULL,
        id_motivo_membro_vaga integer NOT NULL,
        metadata_uuid uuid NULL,
        metadata_row_version bytea NULL,
        metadata_data_inclusao timestamp with time zone NULL,
        metadata_data_atualizacao timestamp with time zone NULL,
        metadata_usuario_inclusao character varying(2000) NULL,
        metadata_usuario_atualizacao character varying(2000) NULL,
        observacao character varying(2000) NULL,
        id_membro character varying(120) NULL,
        data_inicial timestamp with time zone NOT NULL,
        data_final timestamp with time zone NULL,
        CONSTRAINT pk_id_membro_vaga PRIMARY KEY (id, id_vaga),
        CONSTRAINT fk_id_membro_vaga FOREIGN KEY (id_vaga) REFERENCES sajdsg.vaga (id) ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE TABLE sajdsg.vaga_regra_distribuicao (
        id_vaga integer NOT NULL,
        id_regradistribuicao integer NOT NULL,
        metadata_uuid uuid NULL,
        metadata_row_version bytea NULL,
        metadata_data_inclusao timestamp with time zone NULL,
        metadata_data_atualizacao timestamp with time zone NULL,
        metadata_usuario_inclusao character varying(2000) NULL,
        metadata_usuario_atualizacao character varying(2000) NULL,
        distribuicao_por_volume integer NOT NULL,
        compensacao_por_volume integer NOT NULL,
        distribuicao_por_processo integer NOT NULL,
        compensacao_por_processo integer NOT NULL,
        CONSTRAINT pk_id_vaga_regra_dist PRIMARY KEY (id_vaga, id_regradistribuicao),
        CONSTRAINT fk_id_regra_distribuicao FOREIGN KEY (id_regradistribuicao) REFERENCES sajdsg.regra_distribuicao (id) ON DELETE CASCADE,
        CONSTRAINT fk_id_vaga_regra FOREIGN KEY (id_vaga) REFERENCES sajdsg.vaga (id) ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE UNIQUE INDEX ix_analise_processo_metadata_uuid ON sajdsg.analise_processo (metadata_uuid);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE INDEX ix_compensacao_log_vaga_id ON sajdsg.compensacao_log (vaga_id);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE UNIQUE INDEX ix_compensacao_log_metadata_uuid ON sajdsg.compensacao_log (metadata_uuid);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE UNIQUE INDEX ix_distribuicao_processo_metadata_uuid ON sajdsg.distribuicao_processo (metadata_uuid);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE INDEX ix_distribuicao_processo_log_distribuicao_id ON sajdsg.distribuicao_processo_log (distribuicao_id);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE INDEX dist_proc_log_id ON sajdsg.distribuicao_processo_log (processo_id);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE INDEX dist_proc_log_id_transc ON sajdsg.distribuicao_processo_log (processo_id, transaction_id);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE UNIQUE INDEX ix_excecao_vaga_metadata_uuid ON sajdsg.excecao_vaga (metadata_uuid);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE INDEX imp_dist_log_id_proc ON sajdsg.impedimento_distribuicao_log (processo_id);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE INDEX imp_dist_log_id_transc ON sajdsg.impedimento_distribuicao_log (processo_id, transaction_id);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE UNIQUE INDEX ix_impedimento_distribuicao_log_metadata_uuid ON sajdsg.impedimento_distribuicao_log (metadata_uuid);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE INDEX ix_impedimento_processo_vaga_id ON sajdsg.impedimento_processo (vaga_id);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE UNIQUE INDEX ix_impedimento_processo_metadata_uuid ON sajdsg.impedimento_processo (metadata_uuid);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE INDEX ix_membro_vaga_id_vaga ON sajdsg.membro_vaga (id_vaga);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE UNIQUE INDEX ix_membro_vaga_metadata_uuid ON sajdsg.membro_vaga (metadata_uuid);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE UNIQUE INDEX ix_regra_distribuicao_metadata_uuid ON sajdsg.regra_distribuicao (metadata_uuid);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE UNIQUE INDEX ix_vaga_metadata_uuid ON sajdsg.vaga (metadata_uuid);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE INDEX ix_vaga_regra_distribuicao_id_regradistribuicao ON sajdsg.vaga_regra_distribuicao (id_regradistribuicao);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    CREATE UNIQUE INDEX ix_vaga_regra_distribuicao_metadata_uuid ON sajdsg.vaga_regra_distribuicao (metadata_uuid);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sajdsg."__MigrationsHistory" WHERE "MigrationId" = '20220202013828_InitialCreate') THEN
    INSERT INTO sajdsg."__MigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20220202013828_InitialCreate', '3.1.17');
    END IF;
END $$;
